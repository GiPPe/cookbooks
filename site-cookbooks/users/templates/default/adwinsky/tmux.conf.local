# Copy-paste integration
set-option -g default-command "reattach-to-user-namespace -l bash"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Bind ']' to use pbpaste
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# toggle statusbar

bind b set-option status

# sync panes
bind i setw synchronize-panes

bind-key -r + resize-pane -Z

bind '"' split-window -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'
bind % split-window -h -c '#{pane_current_path}'

bind -n C-Up switch-client -p
bind -n C-Down switch-client -n
bind -n C-Left previous-window
bind -n C-Right next-window


setw -g mode-mouse on
# setw -g automatic-rename off

# set-option -g allow-rename off
set -g set-titles on
set -g set-titles-string "#T : #h > #S > #W"

setw -g mode-mouse on

# set prefix key to ctrl+t
bind-key -n C-t send-prefix

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

