#!/bin/sh

# Wrapper script for handling two specific operations: installing gems for specifiy ruby
# versions and checking whether a gem is installed for a specific ruby version.
#
# This is done because the environment can not be assumed to be set up when chef is called.
# So we roll our own and ensure things are setup.

user="<%= @user %>"
homedir="<%= @homedir %>"
rvmhome="<%= @rvmdir %>"

cmd=""
gemsrc=""
gemname=""
gemversion=""
ruby_version=""

tmpfile=/tmp/chef.rvm.check.$$.$RANDOM
trap "rm -f $tmpfile" EXIT

while getopts "g:c:v:s:t:" opt; do
  case $opt in
    g)
      gemname="$OPTARG"
      ;;
    v)
      ruby_version="$OPTARG"
      ;;
    c)
      cmd="$OPTARG"
      ;;
    s)
      gemsrc="--source $OPTARG"
      ;;
    t)
      orig_gemversion="$OPTARG"
      gemversion="-v=${orig_gemversion}"
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done

cat<<EOF >> $tmpfile
export RUBYOPT=""
. ${rvmhome}/scripts/rvm
rvm use ${ruby_version} >/dev/null 2>&1
EOF

case $cmd in
    install)
        echo "gem install --no-ri --no-rdoc ${gemname} ${gemversion} ${gemsrc}" >> $tmpfile
        ;;
    uninstall)
        echo "gem uninstall ${gemname} ${gemversion}" >> $tmpfile
        ;;
    is_not_installed)
        cat<<EOF >> $tmpfile
        gemdir=\$(gem environment gemdir)
        if [ -d \${gemdir}/gems/${gemname}-${orig_gemversion} ] ; then
          exit 1
        else
          if [[ \$(ls \${gemdir}/gems/${gemname}* | wc -l) -eq 0 ]] ; then
            exit 0
          else
            exit 1
          fi
        fi
EOF
        ;;
    *)
        echo "Unknown Command: ${cmd}" >&2
        exit 1
        ;;
esac

## Basically all this is done because chef executes the only_if clause as root and not
## as the user that is used to execute the command. Since RVM is user specific, we can't
## execute as root, rather as the required user. So we need to generate a script that is
## executed as <%= @user %>.
if [ "$(whoami)" == "root" ] ; then
  cat $tmpfile | su ${user}
else
  . $tmpfile
fi

exit $?
